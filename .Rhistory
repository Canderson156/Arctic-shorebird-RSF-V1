warnings()
bigdata <- bigdata_raw
table(bigdata$Count_Probable_nest)
table(bigdata$Count_Nests_found)
test <- filter(bigdata$Count_Probable_nest == " not recorded ")
test <- filter(bigdata, Count_Probable_nest == " not recorded ")
bigdata <- bigdata_raw
test <- filter(bigdata, Count_Probable_nest == " not recorded ")
table(bigdata$Count_Probable_nest)
test <- filter(bigdata, Count_Probable_nest == "not recorded ")
test <- filter(bigdata, Count_Probable_nest == "not recorded")
View(test)
# Create a version for editing / use for resetting without having to re-load from csv
bigdata <- bigdata_raw
#changing variable classes
#Nas come from:
#Day, Day, Date: 477 "not applicable" and 1 "not recorded"
#Propotion surveyed: not applicable - final decision, not applicable - nest visit, not recorded
#Sighting code: 31 "not applicable - habitat description"
#Counts: 1 "not recorded". this appears in many columns becasue it is an invensive plot that is missing a final decision form
bigdata <- bigdata %>%
mutate_at(c("Day", "Month", "Proportion_of_Plot_surveyed",
"Sighting_code", "Sub_region_code", "Count_Nests_found",
"Count_Probable_nest", "Count_Pairs", "Count_Male",
"Count_Female", "Count_Unknown_sex"), as.numeric) %>%
mutate(Date = mdy(Date))
#not done yet:
#start: character to posixct     # these contain two different formats: 00:00 and 00:00:00.
#end: character to posixct       # would need to write code to get rid of the sconds from the one that have it, then combine the date with this time to make a date-time object
#duration: character to posixct   #this is being importanted incorrectly. even in excel sheet, need to change format to h:mm for it to make sense
# fixing capitalizations to make all consistent within a variable
bigdata$Plot_type <- toupper(bigdata$Plot_type)
bigdata$Plot_Selection_Method <- tolower(bigdata$Plot_Selection_Method)
bigdata$Standardized_Species_Code <- toupper(bigdata$Standardized_Species_Code)
#fixing mistakes
bigdata <- bigdata %>%
mutate(Standardized_Species_Code = ifelse(Standardized_Species_Code == "AGPL", "AMGP", Standardized_Species_Code)) %>%
mutate(Standardized_Species_Code = ifelse(Standardized_Species_Code == "RAVE", "CORA", Standardized_Species_Code)) %>%
mutate(Group = ifelse(Standardized_Species_Code == "KIEI", "Waterfowl", Group)) %>%
mutate(Group = ifelse(Standardized_Species_Code == "LALO", "Passerines", Group)) %>%
mutate(Group = ifelse(Standardized_Species_Code == "GWFG", "Waterfowl", Group))
#making all no data values into NAs
bigdata <- bigdata %>%
mutate(Group = ifelse(Group == "not applicable", NA, Group)) %>%
mutate(Group = ifelse(Group == "not recorded", NA, Group))
# select only the columns containing required data
prism <- dplyr::select(bigdata,
Plot = Standardized_Plot_Name, #2855 unique plots
Year, #1994-2019
Month, #mostly June, some July, 475 "not applicable"
Day,
Date,
#start = Start_time_1,
#end = Finish_time_1,
#duration = DERIVED_Survey_Duration..hours.minutes.,
Plot_type,
Region_name, #89 plots with NAs that are outside the regions (south of Mackenzie Delta)
Region_code, #89 plots with NAs that are outside the regions (south of Mackenzie Delta)
Sub_region_name, #170 plots with NAs. 89 as above. 78 in Foxe basin becasue of differences in how subregions were calculated over time (2019 had no subregions). 3 in North Archipelago are confusing, but may stem from weird subregions that overlap near Alert (see email from Laurent RE Tyler's map of subregions)
Sub_region_code, #same as above
Survey_method,
Quality_1 = GIS_Habitat_Quality_2_Code,
Quality_2 = GIS_Habitat_Quality_1_Code, # how were these defined, when were they changed, which one is the one we should use, are these being redone?
Prop_surveyed = Proportion_of_Plot_surveyed,
Selection_method = Plot_Selection_Method, # why are there so many field selected plots?
Sighting_code,
Species = Standardized_Species_Code,  #XXXX means nothing was observed
Group,
Count_Nests_found,
Count_Probable_nest,
Count_Pairs,
Count_Male,
Count_Female,
Count_Unknown_sex,
Plot_area = Plot_area_km2)
#remove the plots that weren't rapid plots
## decided to keep the rapid surveys of intensive plots
prism <- prism %>%
filter(Survey_method == "rapid") %>%
filter(Plot_type !="RECONNAISSANCE")
#keep only on plot observations
## 0 = final decision, 1 = on plot, 2 = incidental, 3 = mammal, 4 = wildlife sign
prism <- filter(prism, Sighting_code == 1)
#create a total birds column
prism <- mutate(prism, total_birds = (Count_Nests_found*2) + (Count_Probable_Nests*2) + Count_(Pairs*2) + Count_Male + Count_Female + Count_Unknown_sex)
prism <- mutate(prism, total_birds = (Count_Nests_found*2) + (Count_Probable_nest*2) + Count_(Pairs*2) + Count_Male + Count_Female + Count_Unknown_sex)
prism <- mutate(prism, total_birds = (Count_Nests_found*2) + (Count_Probable_nest*2) + (Count_Pairs*2) + Count_Male + Count_Female + Count_Unknown_sex)
str(prism)
hist(prism$total_birds)
quantile(prism$total_birds)
quantile(prism$total_birds, na.rm = TRUE)
View(prism)
View(prism)
table(prism$Plot)
table(prism$Year)
table(prism$Day)
table(prism$Month)
table(prism$Date)
table(prism$Plot_type)
table(prism$Region_name)
table(prism$Region_code)
table(prism$Sub_region_name)
table(prism$Survey_method)
table(prism$Quality_1)
table(prism$Quality_2)
table(prism$Prop_surveyed)
table(prism$Selection_method)
table(prism$Sighting_code)
table(prism$Species)
table(prism$Group)
test <- filter(prism, is.na(Group))
View(test)
test$Species
table(prism$total_birds)
test <- filter(prism, is.na(total_birds))
View(test)
table(prism$Plot_area)
table(prism$Plot_area > 0.16)
table(prism$Count_Unknown_sex)
table(prism$Count_Female)
table(prism$Count_Male)
table(prism$Count_Pairs)
table(prism$Count_Probable_nest)
table(prism$Count_Nests_found)
?mutate_at
if.na <- function(x){
ifelse(is.na(x), 0, x)
}
if.na(3)
if.na(6)
if.na(0)
if.na(-4)
if.na(NA)
prism <- prism %>%
mutate_at(c("Count_Nests_found",
"Count_Probable_nest", "Count_Pairs", "Count_Male",
"Count_Female", "Count_Unknown_sex"), if.na)
prism <- mutate(prism, total_birds = (Count_Nests_found*2) + (Count_Probable_nest*2) + (Count_Pairs*2) + Count_Male + Count_Female + Count_Unknown_sex)
View(test)
b2 <- mutate(bigdata, total_birds = (Count_Nests_found*2) + (Count_Probable_nest*2) + (Count_Pairs*2) + Count_Male + Count_Female + Count_Unknown_sex)
table(b2$total_birds)
table(b2$Count_Female)
table(b2$Count_Male)
table(b2$Standardized_Species_Code)
b3 <- b2[b2$Standardized_Plot_Name %in% test$Plot,]
View(b3)
table(b3$Standardized_Plot_Name)
table(b3$Standardized_Species_Code)
table(b3$Plot_type)
table(b3$Survey_method)
View(b3)
View(b3)
b2 <- filter(b2, is.na(total_birds))
b3 <- b2[b2$Standardized_Plot_Name %in% test$Plot,]
View(b3)
View(b2)
b2 <- b2 %>%
filter(is.na(total_birds)) %>%
filter(Sighting_code == 1)
View(b2)
b2$Survey_method
b2$Plot_type
b2 <- mutate(bigdata, total_birds = (Count_Nests_found*2) + (Count_Probable_nest*2) + (Count_Pairs*2) + Count_Male + Count_Female + Count_Unknown_sex)
b2 <- b2 %>%
filter(is.na(total_birds)) %>%
filter(Sighting_code == 1) %>%
filter(Survey_method == "rapid")
rm(b2)
rm(b3)
# select only the columns containing required data
prism <- dplyr::select(bigdata,
Plot = Standardized_Plot_Name, #2855 unique plots
Year, #1994-2019
Month, #mostly June, some July, 475 "not applicable"
Day,
Date,
#start = Start_time_1,
#end = Finish_time_1,
#duration = DERIVED_Survey_Duration..hours.minutes.,
Plot_type,
Region_name, #89 plots with NAs that are outside the regions (south of Mackenzie Delta)
Region_code, #89 plots with NAs that are outside the regions (south of Mackenzie Delta)
Sub_region_name, #170 plots with NAs. 89 as above. 78 in Foxe basin becasue of differences in how subregions were calculated over time (2019 had no subregions). 3 in North Archipelago are confusing, but may stem from weird subregions that overlap near Alert (see email from Laurent RE Tyler's map of subregions)
Sub_region_code, #same as above
Survey_method,
Quality_1 = GIS_Habitat_Quality_2_Code,
Quality_2 = GIS_Habitat_Quality_1_Code, # how were these defined, when were they changed, which one is the one we should use, are these being redone?
Prop_surveyed = Proportion_of_Plot_surveyed,
Selection_method = Plot_Selection_Method, # why are there so many field selected plots?
Sighting_code,
Species = Standardized_Species_Code,  #XXXX means nothing was observed
Group,
Count_Nests_found,
Count_Probable_nest,
Count_Pairs,
Count_Male,
Count_Female,
Count_Unknown_sex,
Plot_area = Plot_area_km2)
#remove the plots that weren't rapid plots
## decided to keep the rapid surveys of intensive plots
prism <- prism %>%
filter(Survey_method == "rapid") %>%
filter(Plot_type !="RECONNAISSANCE")
#keep only on plot observations
## 0 = final decision, 1 = on plot, 2 = incidental, 3 = mammal, 4 = wildlife sign
prism <- filter(prism, Sighting_code == 1)
#replace missing values of counts with 0s
prism <- prism %>%
mutate_at(c("Count_Nests_found",
"Count_Probable_nest", "Count_Pairs", "Count_Male",
"Count_Female", "Count_Unknown_sex"), if.na)
#create a total birds column
prism <- mutate(prism, total_birds = (Count_Nests_found*2) + (Count_Probable_nest*2) + (Count_Pairs*2) + Count_Male + Count_Female + Count_Unknown_sex)
table(prism$total_birds)
table(prism$Group)
View(prism)
##### LOAD PACKAGES
#library(MASS)
library(tidyr)
library(lubridate)
#library(rgeos)
#library(maptools)
#library(rgdal)
#library(reshape)
library(raster)
#library(SDMTools)
#library(velox)
#library(gdalUtils)
library(plyr)
library(dplyr)
library(ggplot2)
#library(corrplot)
#library(scales)
#library(Hmisc)
#library(pastecs)
#library(psych)
#library(data.table)
#library(FRK)
#library(beepr)
##### GENERAL FUNCTIONS
## notin function
## works like %in%, but allows you to select the instances of the first vector that are not in the second vector
`%notin%` <- Negate(`%in%`)
## conditional mutation
## works like mutate(), but only performs the operation on a subset of the dataset, returns the whole dataset
## example: prism2 <- prism2 %>% mutate_cond(region == 'Quebec', UTM_Zone = replace_na(UTM_Zone, 15))
mutate_cond <- function(.data, condition, ..., envir = parent.frame()) {
condition <- eval(substitute(condition), .data, envir)
.data[condition , ] <- .data[condition, ] %>% mutate(...,  na.rm = TRUE)
.data
}
#change the table function to include NAs by default
table <- function (..., useNA = 'ifany') base::table(..., useNA = useNA)
#function that that replaces NAs with 0s and leaves all other values as is
if.na <- function(x){
ifelse(is.na(x), 0, x)
}
##### OBJECTS SPECIFIC TO THIS PROJECT
## Coordinate reference system that I will do all of the analyses in
## North Pole Lambert Azimuthal Equal Area
## -----> should I chnage this to whatever Tyler used?
NPLAEA <-  CRS("+init=EPSG:3573")
## Script for producing:
## a dataset that contain all shorebird observations
## a dataset that contains all goose observations
## a dataset that contain all survey plots
## a dataset that combines all of these
# Read in full PRISM dataset
bigdata_raw <-read.csv("data/PRISM/PRISM 1994 to 2019.csv"
, stringsAsFactors = FALSE, na.strings=c("", "NA"))
# Create a version for editing / use for resetting without having to re-load from csv
bigdata <- bigdata_raw
#changing variable classes
#Nas come from:
#Day, Day, Date: 477 "not applicable" and 1 "not recorded"
#Propotion surveyed: not applicable - final decision, not applicable - nest visit, not recorded
#Sighting code: 31 "not applicable - habitat description"
#Counts: 1 "not recorded". this appears in many columns becasue it is an invensive plot that is missing a final decision form
bigdata <- bigdata %>%
mutate_at(c("Day", "Month", "Proportion_of_Plot_surveyed",
"Sighting_code", "Sub_region_code", "Count_Nests_found",
"Count_Probable_nest", "Count_Pairs", "Count_Male",
"Count_Female", "Count_Unknown_sex"), as.numeric) %>%
mutate(Date = mdy(Date))
#not done yet:
#start: character to posixct     # these contain two different formats: 00:00 and 00:00:00.
#end: character to posixct       # would need to write code to get rid of the sconds from the one that have it, then combine the date with this time to make a date-time object
#duration: character to posixct   #this is being importanted incorrectly. even in excel sheet, need to change format to h:mm for it to make sense
# fixing capitalizations to make all consistent within a variable
bigdata$Plot_type <- toupper(bigdata$Plot_type)
bigdata$Plot_Selection_Method <- tolower(bigdata$Plot_Selection_Method)
bigdata$Standardized_Species_Code <- toupper(bigdata$Standardized_Species_Code)
#fixing mistakes
bigdata <- bigdata %>%
mutate(Standardized_Species_Code = ifelse(Standardized_Species_Code == "AGPL", "AMGP", Standardized_Species_Code)) %>%
mutate(Standardized_Species_Code = ifelse(Standardized_Species_Code == "RAVE", "CORA", Standardized_Species_Code)) %>%
mutate(Group = ifelse(Standardized_Species_Code == "KIEI", "Waterfowl", Group)) %>%
mutate(Group = ifelse(Standardized_Species_Code == "LALO", "Passerines", Group)) %>%
mutate(Group = ifelse(Standardized_Species_Code == "GWFG", "Waterfowl", Group))
#making all no data values into NAs
bigdata <- bigdata %>%
mutate(Group = ifelse(Group == "not applicable", NA, Group)) %>%
mutate(Group = ifelse(Group == "not recorded", NA, Group))
# select only the columns containing required data
prism <- dplyr::select(bigdata,
Plot = Standardized_Plot_Name, #2855 unique plots
Year, #1994-2019
Month, #mostly June, some July, 475 "not applicable"
Day,
Date,
Region_name, #89 plots with NAs that are outside the regions (south of Mackenzie Delta)
Region_code, #89 plots with NAs that are outside the regions (south of Mackenzie Delta)
Sub_region_name, #170 plots with NAs. 89 as above. 78 in Foxe basin becasue of differences in how subregions were calculated over time (2019 had no subregions). 3 in North Archipelago are confusing, but may stem from weird subregions that overlap near Alert (see email from Laurent RE Tyler's map of subregions)
Sub_region_code, #same as above
Plot_type,
Survey_method,
Plot_Shape,
Quality_1 = GIS_Habitat_Quality_2_Code,
Quality_2 = GIS_Habitat_Quality_1_Code, # how were these defined, when were they changed, which one is the one we should use, are these being redone?
Prop_surveyed = Proportion_of_Plot_surveyed,
Selection_method = Plot_Selection_Method, # why are there so many field selected plots?
Plot_area = Plot_area_km2,
Sighting_code,
Species = Standardized_Species_Code,  #XXXX means nothing was observed
Group,
Count_Nests_found,
Count_Probable_nest,
Count_Pairs,
Count_Male,
Count_Female,
Count_Unknown_sex)
#start = Start_time_1,
#end = Finish_time_1,
#duration = DERIVED_Survey_Duration..hours.minutes.
#remove the plots that weren't rapid plots
## decided to keep the rapid surveys of intensive plots
prism <- prism %>%
filter(Survey_method == "rapid") %>%
filter(Plot_type !="RECONNAISSANCE")
#keep only on plot observations
## 0 = final decision, 1 = on plot, 2 = incidental, 3 = mammal, 4 = wildlife sign
prism <- filter(prism, Sighting_code == 1)
#replace missing values of counts with 0s
prism <- prism %>%
mutate_at(c("Count_Nests_found",
"Count_Probable_nest", "Count_Pairs", "Count_Male",
"Count_Female", "Count_Unknown_sex"), if.na)
#create a total birds column
prism <- mutate(prism, total_birds = (Count_Nests_found*2) + (Count_Probable_nest*2) + (Count_Pairs*2) + Count_Male + Count_Female + Count_Unknown_sex)
#60 plots missing regions name and code - should be fixed with GIS
#97 missing subregion name and code - should be fixed with GIS
#both quality columns are missing thousands - ask Isabel? GIS?
#19 are missing proportion surveyed
#361 are missing Group - they are the ones that have species = XXXX, should I replace this?
#38 have NA for plot area
#233 have plot areas bigger than 400 x 400 - what's the deal?
#plan of what I need to do
# seperate these datasets:
## a dataset that contain all shorebird observations
## a dataset that contains all goose observations
## a dataset that contain all survey plots
## a dataset that combines all of these
## all geogrpahic data should be extracted from the GIS files as if may be unreliable in the excel spreadsheet:
# region
# subregion
# plot coordinates
# plot area
# quality? others? what else is in the GIS files?
# compare GIS data vs excel data
#Weird shapes in excel file - do we see the same weird shapes in GIS files?
#do the GIS files represent what WAS done or what SHOUld have been done on paper?
# Create a version for editing / use for resetting without having to re-load from csv
bigdata <- bigdata_raw
#changing variable classes
#Nas come from:
#Day, Day, Date: 477 "not applicable" and 1 "not recorded"
#Propotion surveyed: not applicable - final decision, not applicable - nest visit, not recorded
#Sighting code: 31 "not applicable - habitat description"
#Counts: 1 "not recorded". this appears in many columns becasue it is an invensive plot that is missing a final decision form
bigdata <- bigdata %>%
mutate_at(c("Day", "Month", "Proportion_of_Plot_surveyed",
"Sighting_code", "Sub_region_code", "Count_Nests_found",
"Count_Probable_nest", "Count_Pairs", "Count_Male",
"Count_Female", "Count_Unknown_sex"), as.numeric) %>%
mutate(Date = mdy(Date))
#not done yet:
#start: character to posixct     # these contain two different formats: 00:00 and 00:00:00.
#end: character to posixct       # would need to write code to get rid of the sconds from the one that have it, then combine the date with this time to make a date-time object
#duration: character to posixct   #this is being importanted incorrectly. even in excel sheet, need to change format to h:mm for it to make sense
# fixing capitalizations to make all consistent within a variable
bigdata$Plot_type <- toupper(bigdata$Plot_type)
bigdata$Plot_Selection_Method <- tolower(bigdata$Plot_Selection_Method)
bigdata$Standardized_Species_Code <- toupper(bigdata$Standardized_Species_Code)
#fixing mistakes
bigdata <- bigdata %>%
mutate(Standardized_Species_Code = ifelse(Standardized_Species_Code == "AGPL", "AMGP", Standardized_Species_Code)) %>%
mutate(Standardized_Species_Code = ifelse(Standardized_Species_Code == "RAVE", "CORA", Standardized_Species_Code)) %>%
mutate(Group = ifelse(Standardized_Species_Code == "KIEI", "Waterfowl", Group)) %>%
mutate(Group = ifelse(Standardized_Species_Code == "LALO", "Passerines", Group)) %>%
mutate(Group = ifelse(Standardized_Species_Code == "GWFG", "Waterfowl", Group))
#making all no data values into NAs
bigdata <- bigdata %>%
mutate(Group = ifelse(Group == "not applicable", NA, Group)) %>%
mutate(Group = ifelse(Group == "not recorded", NA, Group))
# select only the columns containing required data
prism <- dplyr::select(bigdata,
Plot = Standardized_Plot_Name, #2855 unique plots
Year, #1994-2019
Month, #mostly June, some July, 475 "not applicable"
Day,
Date,
Region_name, #89 plots with NAs that are outside the regions (south of Mackenzie Delta)
Region_code, #89 plots with NAs that are outside the regions (south of Mackenzie Delta)
Sub_region_name, #170 plots with NAs. 89 as above. 78 in Foxe basin becasue of differences in how subregions were calculated over time (2019 had no subregions). 3 in North Archipelago are confusing, but may stem from weird subregions that overlap near Alert (see email from Laurent RE Tyler's map of subregions)
Sub_region_code, #same as above
Plot_type,
Survey_method,
Plot_Shape,
Quality_1 = GIS_Habitat_Quality_2_Code,
Quality_2 = GIS_Habitat_Quality_1_Code, # how were these defined, when were they changed, which one is the one we should use, are these being redone?
Prop_surveyed = Proportion_of_Plot_surveyed,
Selection_method = Plot_Selection_Method, # why are there so many field selected plots?
Plot_area = Plot_area_km2,
Sighting_code,
Species = Standardized_Species_Code,  #XXXX means nothing was observed
Group,
Count_Nests_found,
Count_Probable_nest,
Count_Pairs,
Count_Male,
Count_Female,
Count_Unknown_sex)
#start = Start_time_1,
#end = Finish_time_1,
#duration = DERIVED_Survey_Duration..hours.minutes.
#remove the plots that weren't rapid plots
## decided to keep the rapid surveys of intensive plots
prism <- prism %>%
filter(Survey_method == "rapid") %>%
filter(Plot_type !="RECONNAISSANCE")
WI <- unique(prism$Plot)
#keep only on plot observations
## 0 = final decision, 1 = on plot, 2 = incidental, 3 = mammal, 4 = wildlife sign
prism <- filter(prism, Sighting_code == 1)
#replace missing values of counts with 0s
prism <- prism %>%
mutate_at(c("Count_Nests_found",
"Count_Probable_nest", "Count_Pairs", "Count_Male",
"Count_Female", "Count_Unknown_sex"), if.na)
#create a total birds column
prism <- mutate(prism, total_birds = (Count_Nests_found*2) + (Count_Probable_nest*2) + (Count_Pairs*2) + Count_Male + Count_Female + Count_Unknown_sex)
WO <- unique(prism$Plot)
WI %notin% WO
which(WI %notin% WO)
WI[1250]
KWI-1314B %in% WI
"KWI-1314B" %in% WI
"KWI-1314B" %in% WO
test <- filter(bigdata, Standardized_Plot_Name == "KWI-1314B")
View(test)
test$Sighting_code
test$Standardized_Species_Code
which(WO %notin% WI)
x <- filter(bigdata, Group == "not recorded")
x <- filter(bigdata_raw, Group == "not recorded")
View(x)
x$Standardized_Plot_Name
x$spec
x$Standardized_Species_Code
test <- filter(bigdata_raw, Standardized_Plot_Name == "KWI-1314B")
test <- filter(bigdata_raw, Standardized_Plot_Name == "KWI-1314B")
test <- filter(bigdata, Standardized_Plot_Name == "KWI-1314B")
# select only the columns containing required data
prism <- dplyr::select(bigdata,
Plot = Standardized_Plot_Name, #2855 unique plots
Year, #1994-2019
Month, #mostly June, some July, 475 "not applicable"
Day,
Date,
Region_name, #89 plots with NAs that are outside the regions (south of Mackenzie Delta)
Region_code, #89 plots with NAs that are outside the regions (south of Mackenzie Delta)
Sub_region_name, #170 plots with NAs. 89 as above. 78 in Foxe basin becasue of differences in how subregions were calculated over time (2019 had no subregions). 3 in North Archipelago are confusing, but may stem from weird subregions that overlap near Alert (see email from Laurent RE Tyler's map of subregions)
Sub_region_code, #same as above
Plot_type,
Survey_method,
Plot_Shape,
Quality_1 = GIS_Habitat_Quality_2_Code,
Quality_2 = GIS_Habitat_Quality_1_Code, # how were these defined, when were they changed, which one is the one we should use, are these being redone?
Prop_surveyed = Proportion_of_Plot_surveyed,
Selection_method = Plot_Selection_Method, # why are there so many field selected plots?
Plot_area = Plot_area_km2,
Sighting_code,
Species = Standardized_Species_Code,  #XXXX means nothing was observed
Group,
Count_Nests_found,
Count_Probable_nest,
Count_Pairs,
Count_Male,
Count_Female,
Count_Unknown_sex)
#start = Start_time_1,
#end = Finish_time_1,
#duration = DERIVED_Survey_Duration..hours.minutes.
#remove the plots that weren't rapid plots
## decided to keep the rapid surveys of intensive plots
prism <- prism %>%
filter(Survey_method == "rapid") %>%
filter(Plot_type !="RECONNAISSANCE")
length(unique(prism$Plot))
prism <- filter(prism, Sighting_code == 1)
length(unique(prism$Plot))
